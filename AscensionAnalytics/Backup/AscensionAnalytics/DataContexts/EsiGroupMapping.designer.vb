'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.5466
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<System.Data.Linq.Mapping.DatabaseAttribute(Name:="David")>  _
Partial Public Class EsiGroupMappingDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertESI_Group_Map(instance As ESI_Group_Map)
    End Sub
  Partial Private Sub UpdateESI_Group_Map(instance As ESI_Group_Map)
    End Sub
  Partial Private Sub DeleteESI_Group_Map(instance As ESI_Group_Map)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.AscensionAnalytics.My.MySettings.Default.DavidConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property ESI_Group_Maps() As System.Data.Linq.Table(Of ESI_Group_Map)
		Get
			Return Me.GetTable(Of ESI_Group_Map)
		End Get
	End Property
End Class

<Table(Name:="dbo.ESI_Group_Map")>  _
Partial Public Class ESI_Group_Map
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ESI_REN_GroupMapID As Integer
	
	Private _ESI_Extrn_Grp_ID As String
	
	Private _REN_Schoolgroup_cd As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnESI_REN_GroupMapIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnESI_REN_GroupMapIDChanged()
    End Sub
    Partial Private Sub OnESI_Extrn_Grp_IDChanging(value As String)
    End Sub
    Partial Private Sub OnESI_Extrn_Grp_IDChanged()
    End Sub
    Partial Private Sub OnREN_Schoolgroup_cdChanging(value As String)
    End Sub
    Partial Private Sub OnREN_Schoolgroup_cdChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Column(Storage:="_ESI_REN_GroupMapID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ESI_REN_GroupMapID() As Integer
		Get
			Return Me._ESI_REN_GroupMapID
		End Get
		Set
			If ((Me._ESI_REN_GroupMapID = value)  _
						= false) Then
				Me.OnESI_REN_GroupMapIDChanging(value)
				Me.SendPropertyChanging
				Me._ESI_REN_GroupMapID = value
				Me.SendPropertyChanged("ESI_REN_GroupMapID")
				Me.OnESI_REN_GroupMapIDChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_ESI_Extrn_Grp_ID", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property ESI_Extrn_Grp_ID() As String
		Get
			Return Me._ESI_Extrn_Grp_ID
		End Get
		Set
			If (String.Equals(Me._ESI_Extrn_Grp_ID, value) = false) Then
				Me.OnESI_Extrn_Grp_IDChanging(value)
				Me.SendPropertyChanging
				Me._ESI_Extrn_Grp_ID = value
				Me.SendPropertyChanged("ESI_Extrn_Grp_ID")
				Me.OnESI_Extrn_Grp_IDChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_REN_Schoolgroup_cd", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property REN_Schoolgroup_cd() As String
		Get
			Return Me._REN_Schoolgroup_cd
		End Get
		Set
			If (String.Equals(Me._REN_Schoolgroup_cd, value) = false) Then
				Me.OnREN_Schoolgroup_cdChanging(value)
				Me.SendPropertyChanging
				Me._REN_Schoolgroup_cd = value
				Me.SendPropertyChanged("REN_Schoolgroup_cd")
				Me.OnREN_Schoolgroup_cdChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
