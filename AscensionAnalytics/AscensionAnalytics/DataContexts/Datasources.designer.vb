'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="David")>  _
Partial Public Class DatasourcesDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertDatasource(instance As Datasource)
    End Sub
  Partial Private Sub UpdateDatasource(instance As Datasource)
    End Sub
  Partial Private Sub DeleteDatasource(instance As Datasource)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.AscensionAnalytics.My.MySettings.Default.DavidConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property Datasources() As System.Data.Linq.Table(Of Datasource)
		Get
			Return Me.GetTable(Of Datasource)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Datasources")>  _
Partial Public Class Datasource
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _DataSourceId As Integer
	
	Private _DataSourceName As String
	
	Private _DataSourceNotes As String
	
	Private _DataSourceDelivery As String
	
	Private _DataSourceClaimsTableName As String
	
	Private _DataSourceWebsite As String
	
	Private _DataSourcePrimaryContact As String
	
	Private _DataSourceLastImport As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDataSourceIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnDataSourceIdChanged()
    End Sub
    Partial Private Sub OnDataSourceNameChanging(value As String)
    End Sub
    Partial Private Sub OnDataSourceNameChanged()
    End Sub
    Partial Private Sub OnDataSourceNotesChanging(value As String)
    End Sub
    Partial Private Sub OnDataSourceNotesChanged()
    End Sub
    Partial Private Sub OnDataSourceDeliveryChanging(value As String)
    End Sub
    Partial Private Sub OnDataSourceDeliveryChanged()
    End Sub
    Partial Private Sub OnDataSourceClaimsTableNameChanging(value As String)
    End Sub
    Partial Private Sub OnDataSourceClaimsTableNameChanged()
    End Sub
    Partial Private Sub OnDataSourceWebsiteChanging(value As String)
    End Sub
    Partial Private Sub OnDataSourceWebsiteChanged()
    End Sub
    Partial Private Sub OnDataSourcePrimaryContactChanging(value As String)
    End Sub
    Partial Private Sub OnDataSourcePrimaryContactChanged()
    End Sub
    Partial Private Sub OnDataSourceLastImportChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDataSourceLastImportChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataSourceId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property DataSourceId() As Integer
		Get
			Return Me._DataSourceId
		End Get
		Set
			If ((Me._DataSourceId = value)  _
						= false) Then
				Me.OnDataSourceIdChanging(value)
				Me.SendPropertyChanging
				Me._DataSourceId = value
				Me.SendPropertyChanged("DataSourceId")
				Me.OnDataSourceIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataSourceName", DbType:="VarChar(200) NOT NULL", CanBeNull:=false)>  _
	Public Property DataSourceName() As String
		Get
			Return Me._DataSourceName
		End Get
		Set
			If (String.Equals(Me._DataSourceName, value) = false) Then
				Me.OnDataSourceNameChanging(value)
				Me.SendPropertyChanging
				Me._DataSourceName = value
				Me.SendPropertyChanged("DataSourceName")
				Me.OnDataSourceNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataSourceNotes", DbType:="VarChar(1000)")>  _
	Public Property DataSourceNotes() As String
		Get
			Return Me._DataSourceNotes
		End Get
		Set
			If (String.Equals(Me._DataSourceNotes, value) = false) Then
				Me.OnDataSourceNotesChanging(value)
				Me.SendPropertyChanging
				Me._DataSourceNotes = value
				Me.SendPropertyChanged("DataSourceNotes")
				Me.OnDataSourceNotesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataSourceDelivery", DbType:="VarChar(30)")>  _
	Public Property DataSourceDelivery() As String
		Get
			Return Me._DataSourceDelivery
		End Get
		Set
			If (String.Equals(Me._DataSourceDelivery, value) = false) Then
				Me.OnDataSourceDeliveryChanging(value)
				Me.SendPropertyChanging
				Me._DataSourceDelivery = value
				Me.SendPropertyChanged("DataSourceDelivery")
				Me.OnDataSourceDeliveryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataSourceClaimsTableName", DbType:="VarChar(200)")>  _
	Public Property DataSourceClaimsTableName() As String
		Get
			Return Me._DataSourceClaimsTableName
		End Get
		Set
			If (String.Equals(Me._DataSourceClaimsTableName, value) = false) Then
				Me.OnDataSourceClaimsTableNameChanging(value)
				Me.SendPropertyChanging
				Me._DataSourceClaimsTableName = value
				Me.SendPropertyChanged("DataSourceClaimsTableName")
				Me.OnDataSourceClaimsTableNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataSourceWebsite", DbType:="VarChar(2000)")>  _
	Public Property DataSourceWebsite() As String
		Get
			Return Me._DataSourceWebsite
		End Get
		Set
			If (String.Equals(Me._DataSourceWebsite, value) = false) Then
				Me.OnDataSourceWebsiteChanging(value)
				Me.SendPropertyChanging
				Me._DataSourceWebsite = value
				Me.SendPropertyChanged("DataSourceWebsite")
				Me.OnDataSourceWebsiteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataSourcePrimaryContact", DbType:="VarChar(300)")>  _
	Public Property DataSourcePrimaryContact() As String
		Get
			Return Me._DataSourcePrimaryContact
		End Get
		Set
			If (String.Equals(Me._DataSourcePrimaryContact, value) = false) Then
				Me.OnDataSourcePrimaryContactChanging(value)
				Me.SendPropertyChanging
				Me._DataSourcePrimaryContact = value
				Me.SendPropertyChanged("DataSourcePrimaryContact")
				Me.OnDataSourcePrimaryContactChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataSourceLastImport", DbType:="SmallDateTime")>  _
	Public Property DataSourceLastImport() As System.Nullable(Of Date)
		Get
			Return Me._DataSourceLastImport
		End Get
		Set
			If (Me._DataSourceLastImport.Equals(value) = false) Then
				Me.OnDataSourceLastImportChanging(value)
				Me.SendPropertyChanging
				Me._DataSourceLastImport = value
				Me.SendPropertyChanged("DataSourceLastImport")
				Me.OnDataSourceLastImportChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
