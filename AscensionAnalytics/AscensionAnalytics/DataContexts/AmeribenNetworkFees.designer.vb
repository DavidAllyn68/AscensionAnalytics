'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="David")>  _
Partial Public Class AmeribenNetworkFeesDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertAmeriben_NetworkFee(instance As Ameriben_NetworkFee)
    End Sub
  Partial Private Sub UpdateAmeriben_NetworkFee(instance As Ameriben_NetworkFee)
    End Sub
  Partial Private Sub DeleteAmeriben_NetworkFee(instance As Ameriben_NetworkFee)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.AscensionAnalytics.My.MySettings.Default.DavidConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property Ameriben_NetworkFees() As System.Data.Linq.Table(Of Ameriben_NetworkFee)
		Get
			Return Me.GetTable(Of Ameriben_NetworkFee)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Ameriben_NetworkFees")>  _
Partial Public Class Ameriben_NetworkFee
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _NetworkFeeId As Integer
	
	Private _PaidDate As Date
	
	Private _schoolgroup_cd As String
	
	Private _PolicyYear As String
	
	Private _Paid As Decimal
	
	Private _Network As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnNetworkFeeIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnNetworkFeeIdChanged()
    End Sub
    Partial Private Sub OnPaidDateChanging(value As Date)
    End Sub
    Partial Private Sub OnPaidDateChanged()
    End Sub
    Partial Private Sub Onschoolgroup_cdChanging(value As String)
    End Sub
    Partial Private Sub Onschoolgroup_cdChanged()
    End Sub
    Partial Private Sub OnPolicyYearChanging(value As String)
    End Sub
    Partial Private Sub OnPolicyYearChanged()
    End Sub
    Partial Private Sub OnPaidChanging(value As Decimal)
    End Sub
    Partial Private Sub OnPaidChanged()
    End Sub
    Partial Private Sub OnNetworkChanging(value As String)
    End Sub
    Partial Private Sub OnNetworkChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NetworkFeeId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property NetworkFeeId() As Integer
		Get
			Return Me._NetworkFeeId
		End Get
		Set
			If ((Me._NetworkFeeId = value)  _
						= false) Then
				Me.OnNetworkFeeIdChanging(value)
				Me.SendPropertyChanging
				Me._NetworkFeeId = value
				Me.SendPropertyChanged("NetworkFeeId")
				Me.OnNetworkFeeIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PaidDate", DbType:="SmallDateTime NOT NULL")>  _
	Public Property PaidDate() As Date
		Get
			Return Me._PaidDate
		End Get
		Set
			If ((Me._PaidDate = value)  _
						= false) Then
				Me.OnPaidDateChanging(value)
				Me.SendPropertyChanging
				Me._PaidDate = value
				Me.SendPropertyChanged("PaidDate")
				Me.OnPaidDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_schoolgroup_cd", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property schoolgroup_cd() As String
		Get
			Return Me._schoolgroup_cd
		End Get
		Set
			If (String.Equals(Me._schoolgroup_cd, value) = false) Then
				Me.Onschoolgroup_cdChanging(value)
				Me.SendPropertyChanging
				Me._schoolgroup_cd = value
				Me.SendPropertyChanged("schoolgroup_cd")
				Me.Onschoolgroup_cdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PolicyYear", DbType:="Char(9) NOT NULL", CanBeNull:=false)>  _
	Public Property PolicyYear() As String
		Get
			Return Me._PolicyYear
		End Get
		Set
			If (String.Equals(Me._PolicyYear, value) = false) Then
				Me.OnPolicyYearChanging(value)
				Me.SendPropertyChanging
				Me._PolicyYear = value
				Me.SendPropertyChanged("PolicyYear")
				Me.OnPolicyYearChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Paid", DbType:="Money NOT NULL")>  _
	Public Property Paid() As Decimal
		Get
			Return Me._Paid
		End Get
		Set
			If ((Me._Paid = value)  _
						= false) Then
				Me.OnPaidChanging(value)
				Me.SendPropertyChanging
				Me._Paid = value
				Me.SendPropertyChanged("Paid")
				Me.OnPaidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Network", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Network() As String
		Get
			Return Me._Network
		End Get
		Set
			If (String.Equals(Me._Network, value) = false) Then
				Me.OnNetworkChanging(value)
				Me.SendPropertyChanging
				Me._Network = value
				Me.SendPropertyChanged("Network")
				Me.OnNetworkChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
